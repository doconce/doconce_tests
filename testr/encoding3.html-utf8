
<!-- tocinfo
{'highest level': 4, 'sections': []}
end of tocinfo -->





<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  TeX: {
     equationNumbers: {  autoNumber: "AMS"  },
     extensions: ["AMSmath.js", "AMSsymbols.js", "autobold.js", "color.js"]
  }
});
</script>
<script type="text/javascript" async
 src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>

<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->


    This is a log file for the doconce script.
    Debugging is turned on by the command-line argument '--debug'
    to doconce format. Without that command-line argument,
    this file is not produced.



******* output format: html *******




Found use of 2 preprocess directives # #if|define|include in file encoding3.do.txt


Found use of mako variable(s) in tmp_preprocess__encoding3.do.txt: ${FORMAT}


Keyword arguments to be sent to mako: {'DEVICE': 'screen', 'FORMAT': 'html', 'MAKO': True}



************************************************************
str>>> The file after running preprocess and/or mako:

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after running @@@OSCMD (from file):

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after inserting @@@CODE (from file):

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after removal of code/tex blocks:

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The code blocks:




************************************************************
str>>> The code block types:




************************************************************
str>>> The tex blocks:




************************************************************
str>>> The file after changing the level of section headings:

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after handling exercises:

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after handling figures:

Text with a name like Åsmund Ødegård works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by Åsmund Ødegård.



************************************************************
str>>> The file after handling ref and label cross referencing:

Text with a name like &#197;smund &#216;deg&#229;rd works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by &#197;smund &#216;deg&#229;rd.


************************************************************
str>>> The file after handling index and bibliography:

Text with a name like &#197;smund &#216;deg&#229;rd works in general.

This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

$b = 1$ is a value suggested by &#197;smund &#216;deg&#229;rd.

*** List typesetting phase + comments and blank lines ***


[Text with a name like &#197;smund &#216;deg&#229;rd works in general.] (ordinary line)


[This block (in format html)] (ordinary line)


[triggers use of `mako`. For all formats, `mako` has] (ordinary line)


[problem with non-ASCII characters anywhere in the text. The remedy] (ordinary line)


[for all formats is to read the file with UTF-8 encoding. With --debug] (ordinary line)


[one can see the internal str/unicode representation of the text] (ordinary line)


[through the various stages of the text transformation process.] (ordinary line)


[$b = 1$ is a value suggested by &#197;smund &#216;deg&#229;rd.] (ordinary line)



************************************************************
str>>> The file after typesetting of lists:

Text with a name like &#197;smund &#216;deg&#229;rd works in general.

<p></p>
This block (in format html)
triggers use of `mako`. For all formats, `mako` has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.

<p></p>
$b = 1$ is a value suggested by &#197;smund &#216;deg&#229;rd.


*** Dealing with authors and institutions ***



*** Inline tags substitution phase ***



*************** Working with tag "horizontal-rule"



*************** Working with tag "title"



*************** Working with tag "date"



*************** Working with tag "movie"



*************** Working with tag "inlinecomment"



*************** Working with tag "abstract"



*************** Working with tag "keywords"



*************** Working with tag "emphasize"



*************** Working with tag "math2"



*************** Working with tag "math"


Found 1 occurrences of "math":
findall list: [('>', '>', 'b = 1', ' ', ' ')]


math is to be replaced using \g<begin>\( \g<subst> \)\g<end>


First occurrence: ">$b = 1$ "
groups: ('>', '>', 'b = 1', ' ', ' ')
named groups: {'begin': '>', 'subst': 'b = 1', 'end': ' '}



**** The file after 1 "math" substitutions ***
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p></p>





<p>This block (in format html)
triggers use of `mako`. For all formats, `mako` has

problem with non-ASCII characters anywhere in the text. The remedy

for all formats is to read the file with UTF-8 encoding. With --debug

one can see the internal str/unicode representation of the text

through the various stages of the text transformation process.
</p>

<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>

--------------------------------------------------------------------------------





*************** Working with tag "bold"



*************** Working with tag "ampersand2"



*************** Working with tag "ampersand1"



*************** Working with tag "colortext"



*************** Working with tag "verbatim"


Found 2 occurrences of "verbatim":
findall list: [(' ', ' ', 'mako', '.', '.'), (' ', ' ', 'mako', ' ', ' ')]


verbatim is to be replaced using <function html_verbatim at XXX>


First occurrence: " `mako`."
groups: (' ', ' ', 'mako', '.', '.')
named groups: {'begin': ' ', 'subst': 'mako', 'end': '.'}



**** The file after 2 "verbatim" substitutions ***
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p></p>





<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has

problem with non-ASCII characters anywhere in the text. The remedy

for all formats is to read the file with UTF-8 encoding. With --debug

one can see the internal str/unicode representation of the text

through the various stages of the text transformation process.
</p>

<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>

--------------------------------------------------------------------------------





*************** Working with tag "emoji"



*************** Working with tag "paragraph"



*************** Working with tag "plainURL"



*************** Working with tag "linkURL2v"



*************** Working with tag "linkURL3v"



*************** Working with tag "linkURL2"



*************** Working with tag "linkURL3"



*************** Working with tag "linkURL"



*************** Working with tag "chapter"



*************** Working with tag "section"



*************** Working with tag "subsection"



*************** Working with tag "subsubsection"



*************** Working with tag "linebreak"



*************** Working with tag "non-breaking-space"



************************************************************
str>>> The file after all inline substitutions:

<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p></p>





<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has

problem with non-ASCII characters anywhere in the text. The remedy

for all formats is to read the file with UTF-8 encoding. With --debug

one can see the internal str/unicode representation of the text

through the various stages of the text transformation process.
</p>

<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>


************************************************************
str>>> The file after typesetting of tables:

<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p></p>





<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has

problem with non-ASCII characters anywhere in the text. The remedy

for all formats is to read the file with UTF-8 encoding. With --debug

one can see the internal str/unicode representation of the text

through the various stages of the text transformation process.
</p>

<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>


************************************************************
str>>> The file after commenting out !commands

<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p></p>





<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has

problem with non-ASCII characters anywhere in the text. The remedy

for all formats is to read the file with UTF-8 encoding. With --debug

one can see the internal str/unicode representation of the text

through the various stages of the text transformation process.
</p>

<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>


************************************************************
str>>> File before call to insert_code_blocks (format html):

<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>
<p></p>
<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>
<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->


************************************************************
str>>> File after call to insert_code_and tex (format html):

<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>
<p></p>
<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>
<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->


************************************************************
str>>> After replacement of !bc and !ec (pygmentized code):

<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>
<p></p>
<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>
<p></p>
<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->


************************************************************
str>>> The file after inserting intro/outro and tex/code blocks, and fixing last format-specific issues:


<!-- tocinfo
{'highest level': 4, 'sections': []}
end of tocinfo -->





<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  TeX: {
     equationNumbers: {  autoNumber: "AMS"  },
     extensions: ["AMSmath.js", "AMSsymbols.js", "autobold.js", "color.js"]
  }
});
</script>
<script type="text/javascript" async
 src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>

<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->



************************************************************
str>>> The file after typesetting of admons and the rest of the !b/!e environments:


<!-- tocinfo
{'highest level': 4, 'sections': []}
end of tocinfo -->





<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  TeX: {
     equationNumbers: {  autoNumber: "AMS"  },
     extensions: ["AMSmath.js", "AMSsymbols.js", "autobold.js", "color.js"]
  }
});
</script>
<script type="text/javascript" async
 src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>

<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->



************************************************************
str>>> The file after potential removal of solutions, answers, hints, etc.:


<!-- tocinfo
{'highest level': 4, 'sections': []}
end of tocinfo -->





<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  TeX: {
     equationNumbers: {  autoNumber: "AMS"  },
     extensions: ["AMSmath.js", "AMSsymbols.js", "autobold.js", "color.js"]
  }
});
</script>
<script type="text/javascript" async
 src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<!-- ------------------- main content ---------------------- -->
<p>Text with a name like &#197;smund &#216;deg&#229;rd works in general.</p>

<p>This block (in format html)
triggers use of <code>mako</code>. For all formats, <code>mako</code> has
problem with non-ASCII characters anywhere in the text. The remedy
for all formats is to read the file with UTF-8 encoding. With --debug
one can see the internal str/unicode representation of the text
through the various stages of the text transformation process.
</p>

<p>\( b = 1 \) is a value suggested by &#197;smund &#216;deg&#229;rd.</p>
<!-- ------------------- end of main content --------------- -->


